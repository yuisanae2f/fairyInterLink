include('Component/box.js');
include('Component/code.js');

docs["map"] = function(lng = args()[0], nil) {
    let fun = {};
    const board = document.getElementById("board"); 

    fun['case'] = () => {
        (p => {
            p.tent('h1', 'h1').set('상황: 탐색/전투');

            (p => {
                p.set('세션이 진행될 때 상황은 크게 탐색 상황과 전투 상황으로 나눌 수 있습니다. ');

                (p => {
                    p.tent('h2', 'h2').set('탐색 상황');
        
                    (p => {
                        p
                        .set('적과 조우하지 않은 모든 상황을 탐색 상황이라고 말합니다.<br/><br>')
        
                        .append('탐색 상황은 기본적으로 속도가 높은순서 대로 행동을 하며,<br>')
                        .append('같은 속도의 사람이 2명 이상 있을 경우 건강이 더 높은 사람이 우선이 됩니다.<br>')
                        .append('만약, 속도와 건강, 두 수치가 모두 같은 경우 GM이 다이스를 굴려 우선 순위를 정합니다.<br><br>')
                        
                        .append('각 플레이어는 행동력을 소모해서 전투/탐색에서의 이동의 액션을 취할 수 있습니다.<br/>')
                        .append('스탠 페이즈에서 자신은 처음 이동은 행동력을 소모하지 않고, 이후 한 칸 당 행동력 1을 소모합니다.<br/><br>')
        
                        .append('만약 리타이어 상태의 아군을 업고 가는 등의 선언을 할 경우, 행동마다 2의 행동력을 소모하는 대신, 행동이 가능합니다.');
        
                        (p => {
                            p.tent('h3', 'h3').set('휴식');
                            p.tab('div', 'div')
                            .set('탐색 파트에서 1턴간 아무 행동을 못하는 대신 LP 3d10 SP 5d10 회복합니다.<br/>')
                            .append('또, 휴식을 통해 회복 가능한 상태이상도 회복 가능합니다.');
                        })(p.tent('re'));
        
                        (p => {
                            p.tent('h3', 'h3').set('시야');
                            p.tab('div', 'div')
                            .set('기본적인 탐색 페이즈의 시야는 자기 중심으로 3x3. <br/>')
                            .append('하지만 도구나 비전투계 스킬을 통해서 시야나 특정 행동에 대한 결과에 보정값을 가질 수 있습니다.');
                        })(p.tent('r'));
        
                        p
                        .append('<br/>탐색 상황에서 자신의 행동 선언에 대해, 그리고 행동 선언 후 일어나는 이벤트와 결과에 대해 <br/>')
                        .append('해당 플레이어는 플레이어들과 상의 후 결정을 해도 좋습니다.<br/><br/>')
                        
                        .append('이 과정에서 플레이어가 자신의 목소리로 다른 플레이어들과 소통해도 좋고,<br/>')
                        .append("해당 캐릭터에 이입해 다른 캐릭터들에게 정보전달들의 과정을 거쳐도 좋습니다. <br/><br/>")
        
                        .append('또한, 롤플레잉 등의 행동으로 보다 최적의 선택지를 생각해내서 판정을 시행하는 경우 <br/>')
                        .append('판정치에 +5까지의 보정을 넣어서 성공률을 올리는 것도 GM의 재량껏 가능한 것으로 합니다. <br/><br/>')
        
                        .append('단, 전투 상황에서의 판정치는 GM의 재량껏 바꾸지 못하되, 시나리오에 기재가 되어있으면 OK로 합니다.<br/><br/>')
        
                        .append(`해당 판정 관련 내용이 이해가 안 될 경우 <a href='${getURL('judge def')}'><strong>판정의 정의</strong></a> 챕터를 확인해주세요.`);
                    })(p.tab('div', 'div'));
                })(p.tent('search', 'div'));
    
                (p => {
                    p.tent('h2', 'h2').set('전투 상황');
        
                    (p => {
                        p
                        .set('전투 상황은 적과 마주했을 때 라운드가 시작됩니다.<br/>')
                        .append('전투 상황에서 각 플레이어들은 자신의 차례에 다음과 같은 페이즈를 가지게 됩니다.');
        
                        (p => {
                            p.tent('h3', 'h3').set('스탠바이 페이즈');
        
                            (p => {
                                p
                                .set('이동 관련 페이즈로, 행동력을 소모해 배틀 맵을 이동할 수 있습니다.<br/><br/>')
                                .append('행동력 1당 1칸을 이동할 수 있으며,<br/>')
                                .append('구조물에 대한 상호작용들은 <a href="#board map">맵</a> 챕터에서 후술하겠습니다.<br/><br/>')
                                .append('행동력의 사용 수치는 자유며, 다음 자신의 턴 시작 시 행동력은 최대치로 회복됩니다.');
                            })(p.tab('div', 'div'));
                        })(p.tent('standby'));
    
                        (p => {
                            p.tent('h3', 'h3').set('메인 페이즈');
    
                            (p => {
                                p
                                .set('스킬/도구 관련 페이즈로 스킬과 도구를 각각 1회 씩 사용할 수 있습니다. <br/><br/>')
    
                                .append('패시브는 스킬 마다 SP지불/발동 타이밍을 정해야함. <br/>')
                                .append('액티브는 메인 페이즈에만 발동할 수 있는것으로 통일.<br/><br/>')
    
                                .append('또한, 1턴에 1번 공격/수비 상태를 지정해서 배틀 페이즈 때 공격 상태로 진행할 것인지, <br/>')
                                .append('수비 상태로 다음 자신의 턴 까지 진행할 것인지 정할 수 있습니다.');
                            })(p.tab('div', 'div'));
                        })(p.tent('main'));
    
                        (p => {
                            p.tent('h3', 'h3').set('배틀 페이즈');
    
                            (p => {
                                p
                                .set('공격 페이즈로서, 지정된 사거리 내에 있는 적 1명을 공격할 수 있습니다. <br><br>')
    
                                .append('공격 선언 시 공격 판정을 진행하며,<br/>')
                                .append(`<a href='${getURL('judge def')}' title='필요한 경우 피격자의 회피 판정 실패 이후'><strong>공격 판정에 성공</strong></a>했을 경우 공격 데미지 판정을 진행한다. <br/>`)
    
                                .append(`이 결과값만큼 피격자의 <a href='${getURL('chara lp')}'>LP</a>에 데미지를 입힙니다.`)
                            })(p.tab('div', 'div'));
                        })(p.tent('battle'));
                    })(p.tab('div', 'div'));
                })(p.tent('combat', 'div'));
            })(p.tab('div', 'div'));
        })(board.tent('case', 'div'));
    };

    fun['map'] = () => {
        (p => {
            p.tent('h1', 'h1').set('탐색 맵 / 전투 맵');

            (p => {
                (p => {
                    p.tent('h2', 'h2').set('공통 아이콘');

                    (p => {
                                            p.tent('a', 'h3').set('벽');
                    (p => {
                        p
                        .code(0, '1x1 칸에 지정,<br/>')
                        .code(0, '해당 아이콘이 있는 곳은 물리적으로 막혀있기 때문에 지나갈 수 없다.<br/>')
                        .code(0, '시야도 차단되어서 너머의 정보를 확인할 수 없다.<br/>');
                    })(p.box('wall'));

                    p.tent('b', 'h3').set('문');
                    (p => {
                        p
                        .code(0, '1x1 칸에 지정,<br/>')
                        .code(0, '개폐가능 여부는 모름. <br/><br/>')
                        .code(0, '열 수 있는 문의 경우 이동 시 행동력의 사용 없이 지나갈 수 있으며, <br/>')
                        .code(0, '문이 열려 있는 경우 너머를 시야로 확인 가능. 닫혀 있는 경우 시야 확인 불가능.');
                    })(p.box('door'));

                    p.tent('c', 'h3').set('창문');
                    (p => {
                        p
                        .code(0, '1x1 칸에 지정,<br/>')
                        .code(0, '창문을 통한 이동은 불가능하지만 너머의 시야를 확인 가능.');
                    })(p.box('window'));

                    p.tent('d', 'h3').set('장애물');
                    (p => {
                        p
                        .code(0, '칸을 임의의 개수로 지정 가능,<br/>')
                        .code(0, '해당 칸들은 이동 불가.');
                    })(p.box('block'));

                    p.tent('e', 'h3').set('와드');
                    (p => {
                        p
                        .code(0, '해당 와드를 중심으로 nxn의 위치를 밝혀서 시야가 확인 가능해짐.<br/>')
                        .code(0, '지속시간은 와드가 유지되는 동안이고 이는 와드의 종류에 따라 다를 수 있다.');
                    })(p.box('ward'));

                    p.tent('f', 'h3').set('퀘스트');
                    (p => {
                        p
                        .code(0, '외부 정보 칸에 배치.<br/>')
                        .code(0, '해당 캠페인에서 주가 되는 퀘스트 내용을 확인 가능.');
                    })(p.box('quest'));

                    p.tent('g', 'h3').set('전리품');
                    (p => {
                        p
                        .code(0, '일반 전투나 보스 전투에서 승리 후 획득 가능한 전리품. <br/>')
                        .code(0, '내용물 확인 가능.');
                    })(p.box('loot'));

                    p.tent('h', 'h3').set('워프게이트');
                    (p => {
                        p
                        .code(0, '1x1 칸에 지정. <br/>')
                        .code(0, '세계간의 이동을 가능하게 하는 게이트. <br/>')
                        .code(0, '탐색의 시작과 끝을 의미하는 용도이기도 함.');
                    })(p.box('gate'));

                    p.tent('i', 'h3').set('나침반');
                    (p => {
                        p
                        .code(0, '외부 정보 칸에 배치. <br/>')
                        .code(0, '세계관 지정 후 해당 세계관의 간략한 정보를 계속 표시해줌. <br/>');
                    })(p.box('compass'));

                    p.tent('j', 'h3').set('상태이상');
                    (p => {
                        p
                        .code(0, '캐릭터의 효과 란에 등재.  <br/>')
                        .code(0, '마킹되어 있을 경우 해당 상태이상이 현재 캐릭터에게 지속되고 있음을 의미. <br/>');
                    })(p.box('fx'));
                    })(p.tab('div', 'div'));
                })(p.tent('common'));

                (p => {
                    p.tent('h2', 'h2').set('탐색 아이콘');
                    
                    (p => {
                        p.tent('a', 'h3').set('전투 개시 아이콘');
                        (p => {
                            p
                            .code(0, '1 칸을 지정,<br/>')
                            .code(0, '해당 칸에 플레이어가 도착할 경우 전투 상황으로 이행.');
                        })(p.box('encounter'));
    
                        p.tent('b', 'h3').set('보물상자');
                        (p => {
                            p
                            .code(0, '1 칸을 지정,<br/>')
                            .code(0, '해당 칸에 플레이어가 도착할 경우 보물상자를 확인 후, 행동 가능.')
                        })(p.box('chest'));

                        p.tent('c', 'h3').set('랜덤 이벤트');
                        (p => {
                            p
                            .code(0, 'nxn 칸을 지정,<br/>')
                            .code(0, '해당 칸에 플레이어가 도착할 경우 랜덤한 “이벤트 칸” 이벤트가 발생.<br/><br/>')

                            .code(0, '칸의 아이콘에 의한 랜덤 이벤트 외에도 “긴급”, “히든”, “노말” 과 같은 이벤트의 분류기준이 존재하며, <br/>')
                            .code(0, '각각 라운드 제한, 히든 피스 발견, 그 외의 일반적인 이벤트를 의미한다.<br><br>')
                            
                            .code(0, '이벤트의 판정 정보도 명시되어있는 정보에 따라서 플레이어들에게 공개하기도, 비공개하기도 한다.');
                        })(p.box('rand'));

                        p.tent('d', 'h3').set('상호작용 가능 NPC');
                        (p => {
                            p
                            .code(0, '1x1 칸을 지정,<br/>')
                            .code(0, '해당 칸에 플레이어가 도착할 경우 특정 npc와 롤 플레잉을 통한 상호작용이 가능. <br/>')

                            .code(0, '이를 통한 랜덤 보상도 확률적으로 획득 가능. <br/>');
                        })(p.box('npc'));

                        p.tent('e', 'h3').set('상점');
                        (p => {
                            p
                            .code(0, '1x1 칸을 지정,<br/>')
                            .code(0, '해당 칸에 플레이어가 도착할 경우 상점 거래 가능.<br/>');
                        })(p.box('shop'));

                        p.tent('f', 'h3').set('캠프');
                        (p => {
                            p
                            .code(0, 'nxn의 칸을 지정,<br/>')
                            .code(0, '해당 구역을 캠프 구역으로 지정.<br/>')
                            .code(0, '해당 지역에서는 전투 불가능.');
                        })(p.box('camp'));
                    })(p.tab('div', 'div'));
                })(p.tent('search'));

                (p => {
                    p.tent('h2', 'h2').set('전투 아이콘');

                    (p => {
                        (p => {
                            (p => {
                                p
                                .code(90, '전투 상황 도중 필드에 존재하는 아이템 전부를 표시한다. <br/>')
                                .code(0, '해당 아이템에 대한 표시는 상세 보기로 지정한다.');
                            })(p.set('<h3>아이템</h3>').box('c'));
                        })(p.tent('item'));

                        (p => {
                            (p => {
                                p
                                .code(90, '전투 상황 도중 진행되는 특수 기믹 관련 상황을 전부 표시한다. <br/>')
                                .code(0, '필드 위에 사용할 수도, 필드 외부에 상황 표시 용으로도 사용할 수도 있다.');
                            })(p.set('<h3>특수 기믹</h3>').box('c'));
                        })(p.tent('gimmick'));

                        (p => {
                            (p => {
                                p
                                .code(90, '공격의 유효 범위를 표시한다.  <br/>')
                                .code(0, '근거리는')
                                .code('word', ' 파란색')
                                .code(0, ', 원거리는 ')
                                .code('logic', '빨간색')
                                .code(0, ', 특수의 경우 ')
                                .code('def', ' 보라색')
                                .code(0, '으로 표시한다.');
                            })(p.set('<h3>사거리</h3>').box('c'));
                        })(p.tent('r'));
                    })(p.tab('div', 'div'));
                })(p.tent('combat'));
            })(p.tab('div', 'div'));
        })(board.tent('map', 'div'));
    }
    return [fun, ['case', 'map']];
}