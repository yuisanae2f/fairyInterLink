docs["chara"] = function(lng = args()[0], nil) {
    let fun = {};
    const board = document.getElementById("board");

    fun['_'] = () => {
        ((p) => {
            p.tent('title', 'h1').set(
                {
                    "ko": '캐릭터의 스테이터스' ,
                    'en': 'status - Character'
                }[lng] ?? nil
            );

            p.tab('desc', 'div').set('캐릭터의 스테이터스는 다음과 같은 수치들이 존재하며, 각각의 상세 설명은 아래에 기재되어 있습니다.');
        })(board.tent('_'));
    };

    fun['str'] = () => {
        ((p) => {
            p.tent('title', 'h1').set("근력");

            ((p) => {
                p
                .append('캐릭터 고유의 물리적인 힘을 나타냅니다. <br/>')
                .append('1d10으로 정하며, 해당 스테이터스의 최소치는 1, 최대치는 10입니다.<br/><br/>')

                .append('근력은 공격 판정을 통해 상대에게 공격을 명중시키거나 탐색 판정 중 물리적인 힘으로,<br/>')
                .append('해결할 수 있는 문제일 경우 해당 수치를 판정 기준으로 사용하게 됩니다.');
            })(p.tab('desc', 'div'));
        })(board.tent('str', 'div'));
    };

    fun['spd'] = () => {
        ((p) => {
            p.tent('title', 'h1').set('속력');

            ((p) => {
                p
                .append('캐릭터의 민첩함을 나타냅니다.<br/>')
                .append('1d10으로 정하며, 해당 스테이터스의 최소치는 1, 최대치는 10입니다. <br><br>')

                .append('전투나 탐색에서 행동 순서는 속도 수치가 높은 사람 순으로 정해집니다. <br/>')
                .append('또한, 해당 수치는 탐색 판정 중 민첩한 행동이나 섬세한 행동을 요구하는 상황일 경우 판정 기준으로 사용하게 됩니다.')
            })(p.tab('desc', 'div'));
        })(board.tent('spd', 'div'));
    };

    fun['hp'] = () => {
        ((p) => {
            p.tent('title', 'h1').set('건강');

            ((p) => {
                p
                .append('캐릭터의 신체적, 정신적 튼튼함을 나타냅니다.<br/>')
                .append('2d5으로 정하며, 해당 스테이터스의 최소치는 캐릭터 시트 제작 때 2, 세션 진행에서 최소치는 1이며, 최대치는 10입니다.<br/><br/>')
                
                .append('상태이상을 입게 될 때 해당 수치를 이용한 상태이상 저항 판정에서 성공할 경우 상태이상을 받지 않게 됩니다.')
            })(p.tab('desc', 'div'));
        })(board.tent('hp', 'div'));
    };

    fun['int'] = () => {
        (p => {
            p.tent('title', 'h1').set('지능');

            (p => {
                p
                .append('캐릭터의 상황 분석 능력이나 지식 등등을 나타냅니다. <br/>')
                .append('1d10으로 정하며 최소치는 1, 최대치는 10입니다.<br><br>')

                .append('탐색 판정 중 함정을 분석하거나, NPC들과의 상호작용을 통해 흥정 같은 사회적 행위를 할 경우<br/>')
                .append('해당 수치를 이용한 판정을 진행하게 됩니다.');
            })(p.tab('desc', 'div'));
        })(board.tent('int', 'div'));
    };

    fun['atk'] = () => {
        (p => {
            p.tent('title', 'h1').set('공격력');

            ((p => {
                p
                .append('캐릭터가 상대를 공격할 때 들어가는 데미지 수치를 일컫습니다. <br/>')
                .append('전투에서의 공격력은 (자신의 근력)d2 + (페어리의 파워 수치) 로 계산합니다., <br/><br/>')
                .append('도구 카드와 스킬에 의한 공격력의 변동은 패시브 스킬-> 도구 카드 -> 버프/디버프 -> 크리티컬 효과 순으로 산출하고, 한 종류에서의 배율은 합연산으로 계산합니다. <br/>')
                .append('히로익의 사기(장착시 공격력이 2배)와 티아라의 사기(장착시 공격력이 3배)를 동시에 장착할 경우 도구에 의한 공격력 증가 배율은 2+3=5로 5배가 된다.)');
            }))(p.tab('desc', 'div'))
        })(board.tent('atk', 'div'));
    };

    fun['def'] = () => {
        (p => {
            p.tent('title', 'h1').set('수비력');

            (p => {
                p
                .append('전투 시 수비력은 (자신의 건강 수치) + (페어리의 내구 수치)로 정해집니다.<br>')
                .append('전투에서의 수비력은 피격 받았을 때 공격력의 최종 데미지에서 수비력만큼 피해를 감합니다.<br/><br/>')

                .append('예시 상황으로 아군 A의 공격력이 30, 도구 카드 ()로 공격력을 10 증가, <br/>')
                .append('패시브 효과() 로 공격력이 2배, 디버프 효과()로 공격력이 절반인 상태에서 수비력이 10인 적 1을 공격한다고 가정할 경우,<br/>')
                .append('아군 A가 공격에 성공했을 때 데미지는 { ( 30 x 2 + 10 ) / 2 } – 10 = 25 가 됩니다. ')
            })(p.tab('desc', 'div'));
        })(board.tent('def', 'div'));
    };

    fun['_1'] = () => {
        board.tent('_1', 'p').set('<br/>이후 캐릭터 시트에서 사용되는 파라미터는 다음과 같은 4개로 정의합니다.');
    }

    fun['lp'] = () => {
        (p => {
            p.tent('title', 'h1').set('LP');

            (p => {
                p
                .append('캐릭터의 현재 체력입니다.<br/>')
                .append('0이 될 경우 리타이어 상태가 됩니다.<br/>');

                (p => {
                    p.tent('title', 'h2').set('리타이어');

                    p.tab('desc', 'div')
                    .append('일종의 가사 상태를 일컫으며, <br/>')
                    .append('리타이어 상태를 치료하는 도구 및 스킬의 효과를 세션 내에서 받지 못할 경우 <br/>')
                    .append('반영구적으로 그 캐릭터는 이후 세션들에서 사용이 불가능합니다.');
                })(p.tent('retire', 'div'));

                p.append('<br/>LP는 기본적으로 자동 회복이 없습니다.');
            })(p.tab('desc', 'div'));
        })(board.tent('lp', 'div'));
    };

    fun['sp'] = () => {
        (p => {
            p.tent('title', 'h1').set('SP');

            (p => {
                p
                .append('캐릭터가 스킬을 사용할 때 사용하는 포인트입니다. <br/>')
                .append('탐색 파트에서는 1라운드에 10포인트 씩 회복하고, 전투에서는 기본적으로 자동 회복이 없습니다.');
            })(p.tab('desc', 'div'));
        })(board.tent('sp', 'div'));
    };

    fun['act'] = () => {
        (p => {
            p.tent('title', 'h1').set('행동력');
            
            (p => {
                p
                .append('한 턴에 이동할 수 있는 칸 수를 말합니다.<br/>')
                .append('(속도) * (건강)으로 정하며, 최소치는 1, 최대치는 5입니다.<br/><br/>')
                .append('한 턴이 지나면 행동력은 기본적으로 최대치로 회복합니다.');
            })(p.tab('desc', 'div'));
        })(board.tent('act', 'div'));
    };

    fun['ord'] = () => {
        (p => {
            p.tent('title', 'h1').set('우선도');

            (p => {
                p
                .append('라운드 시작 시 행동의 우선 순위를 정하는 수치입니다. <br/>')
                .append('{(속도)*10+(건강)}-10 으로 계산하며, 최소치는 1, 최대치는 100입니다.<br/><br/>')

                .append('수치가 높을수록 라운드 내에서 먼저 행동 가능하며,<br/>')
                .append('같은 우선도를 가진 경우 속도가 높은 사람이 우선적으로 행동을 하게 됩니다.<br><br>')
                
                .append('속도도 같은 경우 GM이 임의의 다이스를 굴려서 먼저 행동할 사람을 정합니다.');
            })(p.tab('desc', 'div'));
        })(board.tent('ord', 'div'));
    };

    return [fun, ['_', 'str', 'spd', 'hp', 'int', 'atk', 'def', '_1', 'lp', 'sp', 'act', 'ord']];
}